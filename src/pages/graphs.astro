---
import Nesne from "../components/nesne.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Grafikler">


        <script type="text/javascript">
    // This example shows how to prepopulate the UI on
    // load using the "Canadian Parliament 2012" dataset.

    $(function(){
        $.getJSON("/mps.json", function(mps) {
            $("#output").pivotUI(mps, {
                rows: ["Province"],
                cols: ["Party"],
                aggregatorName: "Integer Sum",
                vals: ["Age"],
                rendererName: "Heatmap",
                rendererOptions: {
                    table: {
                        clickCallback: function(e, value, filters, pivotData){
                            var names = [];
                            pivotData.forEachMatchingRecord(filters,
                                function(record){ names.push(record.Name); });
                            alert(names.join("\n"));
                        }
                    }
                }
            });
        });
     });
        </script>
        <script type="text/javascript">
    // This example shows how to prepopulate the UI on
    // load using the "Canadian Parliament 2012" dataset.

    $(function(){
        $.getJSON("/mps.json", function(mps) {
            $("#output1").pivotUI(mps, {
                rows: ["Province"],
                cols: ["Party"],
                aggregatorName: "Integer Sum",
                vals: ["Age"],
                rendererName: "Heatmap",
                rendererOptions: {
                    table: {
                        clickCallback: function(e, value, filters, pivotData){
                            var names = [];
                            pivotData.forEachMatchingRecord(filters,
                                function(record){ names.push(record.Name); });
                            alert(names.join("\n"));
                        }
                    }
                }
            });
        });
     });
        </script>
    <div >
      <h1 style="margin-left: 50%;">Grafik1</h1>
        <div id="container4" style="height: 400px"></div>

    
        <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js"></script>
        <!-- Uncomment this line if you want to dataTool extension
        <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/extension/dataTool.min.js"></script>
        -->
        <!-- Uncomment this line if you want to use gl extension
        <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js"></script>
        -->
        <!-- Uncomment this line if you want to echarts-stat extension
        <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js"></script>
        -->
        <!-- Uncomment this line if you want to use map
        <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/china.js"></script>
        <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/world.js"></script>
        -->
        <!-- Uncomment these two lines if you want to use bmap extension
        <script type="text/javascript" src="https://api.map.baidu.com/api?v=3.0&ak=YOUR_API_KEY"></script>
        <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/extension/bmap.min.js"></script>
        -->
      
        <script type="text/javascript">
          var dom = document.getElementById('container4');
          var myChart = echarts.init(dom, null, {
            renderer: 'canvas',
            useDirtyRect: false
          });
          var app = {};
          
          var option;
      
          option = {
        xAxis: {
          type: 'category',
          boundaryGap: false,
          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']
        },
        yAxis: {
          type: 'value'
        },
        series: [
          {
            data: [820, 932, 901, 934, 1290, 1330, 1320],
            type: 'line',
            areaStyle: {}
          }
        ]
      };
      
          if (option && typeof option === 'object') {
            myChart.setOption(option);
          }
      
          window.addEventListener('resize', myChart.resize);
        </script>

<!-------------------------------------------------- Grafik2 -------------------------------------------------->
<h1 style="margin-left: 50%;">Grafik2</h1>
        <div id="container" style="height: 400px"></div>

        
            <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js"></script>
            <!-- Uncomment this line if you want to dataTool extension
            <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/extension/dataTool.min.js"></script>
            -->
            <!-- Uncomment this line if you want to use gl extension
            <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js"></script>
            -->
            <!-- Uncomment this line if you want to echarts-stat extension
            <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js"></script>
            -->
            <!-- Uncomment this line if you want to use map
            <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/china.js"></script>
            <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/world.js"></script>
            -->
            <!-- Uncomment these two lines if you want to use bmap extension
            <script type="text/javascript" src="https://api.map.baidu.com/api?v=3.0&ak=YOUR_API_KEY"></script>
            <script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/extension/bmap.min.js"></script>
            -->
        
            <script type="text/javascript">
            var dom = document.getElementById('container');
            var myChart = echarts.init(dom, null, {
                renderer: 'canvas',
                useDirtyRect: false
            });
            var app = {};
            
            var option;
        
            option = {
            color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],
            title: {
            text: 'Gradient Stacked Area Chart'
            },
            tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'cross',
                label: {
                backgroundColor: '#6a7985'
                }
            }
            },
            legend: {
            data: ['Line 1', 'Line 2', 'Line 3', 'Line 4', 'Line 5']
            },
            toolbox: {
            feature: {
                saveAsImage: {}
            }
            },
            grid: {
            left: '3%',
            right: '4%',
            bottom: '3%',
            containLabel: true
            },
            xAxis: [
            {
                type: 'category',
                boundaryGap: false,
                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']
            }
            ],
            yAxis: [
            {
                type: 'value'
            }
            ],
            series: [
            {
                name: 'Line 1',
                type: 'line',
                stack: 'Total',
                smooth: true,
                lineStyle: {
                width: 0
                },
                showSymbol: false,
                areaStyle: {
                opacity: 0.8,
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                    {
                    offset: 0,
                    color: 'rgb(128, 255, 165)'
                    },
                    {
                    offset: 1,
                    color: 'rgb(1, 191, 236)'
                    }
                ])
                },
                emphasis: {
                focus: 'series'
                },
                data: [140, 232, 101, 264, 90, 340, 250]
            },
            {
                name: 'Line 2',
                type: 'line',
                stack: 'Total',
                smooth: true,
                lineStyle: {
                width: 0
                },
                showSymbol: false,
                areaStyle: {
                opacity: 0.8,
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                    {
                    offset: 0,
                    color: 'rgb(0, 221, 255)'
                    },
                    {
                    offset: 1,
                    color: 'rgb(77, 119, 255)'
                    }
                ])
                },
                emphasis: {
                focus: 'series'
                },
                data: [120, 282, 111, 234, 220, 340, 310]
            },
            {
                name: 'Line 3',
                type: 'line',
                stack: 'Total',
                smooth: true,
                lineStyle: {
                width: 0
                },
                showSymbol: false,
                areaStyle: {
                opacity: 0.8,
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                    {
                    offset: 0,
                    color: 'rgb(55, 162, 255)'
                    },
                    {
                    offset: 1,
                    color: 'rgb(116, 21, 219)'
                    }
                ])
                },
                emphasis: {
                focus: 'series'
                },
                data: [320, 132, 201, 334, 190, 130, 220]
            },
            {
                name: 'Line 4',
                type: 'line',
                stack: 'Total',
                smooth: true,
                lineStyle: {
                width: 0
                },
                showSymbol: false,
                areaStyle: {
                opacity: 0.8,
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                    {
                    offset: 0,
                    color: 'rgb(255, 0, 135)'
                    },
                    {
                    offset: 1,
                    color: 'rgb(135, 0, 157)'
                    }
                ])
                },
                emphasis: {
                focus: 'series'
                },
                data: [220, 402, 231, 134, 190, 230, 120]
            },
            {
                name: 'Line 5',
                type: 'line',
                stack: 'Total',
                smooth: true,
                lineStyle: {
                width: 0
                },
                showSymbol: false,
                label: {
                show: true,
                position: 'top'
                },
                areaStyle: {
                opacity: 0.8,
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                    {
                    offset: 0,
                    color: 'rgb(255, 191, 0)'
                    },
                    {
                    offset: 1,
                    color: 'rgb(224, 62, 76)'
                    }
                ])
                },
                emphasis: {
                focus: 'series'
                },
                data: [220, 302, 181, 234, 210, 290, 150]
            }
            ]
        };
        
            if (option && typeof option === 'object') {
                myChart.setOption(option);
            }
        
            window.addEventListener('resize', myChart.resize);
            </script>

<!------------------------------------------------ Grafik3 ------------------------------------>
<h1 style="margin-left:50% ;">Grafik3</h1>
<div  id="container2" style="height: 400px"></div>

  
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js"></script>
<!-- Uncomment this line if you want to dataTool extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/extension/dataTool.min.js"></script>
-->
<!-- Uncomment this line if you want to use gl extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js"></script>
-->
<!-- Uncomment this line if you want to echarts-stat extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js"></script>
-->
<!-- Uncomment this line if you want to use map
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/china.js"></script>
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/world.js"></script>
-->
<!-- Uncomment these two lines if you want to use bmap extension
<script type="text/javascript" src="https://api.map.baidu.com/api?v=3.0&ak=YOUR_API_KEY"></script>
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/extension/bmap.min.js"></script>
-->

<script type="text/javascript">
  var dom = document.getElementById('container2');
  var myChart = echarts.init(dom, null, {
    renderer: 'canvas',
    useDirtyRect: false
  });
  var app = {};
  
  var option;

  let base = +new Date(1968, 9, 3);
let oneDay = 24 * 3600 * 1000;
let date = [];
let data = [Math.random() * 300];
for (let i = 1; i < 20000; i++) {
var now = new Date((base += oneDay));
date.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'));
data.push(Math.round((Math.random() - 0.5) * 20 + data[i - 1]));
}
option = {
tooltip: {
  trigger: 'axis',
  position: function (pt) {
    return [pt[0], '10%'];
  }
},
title: {
  left: 'center',
  text: 'Large Area Chart'
},
toolbox: {
  feature: {
    dataZoom: {
      yAxisIndex: 'none'
    },
    restore: {},
    saveAsImage: {}
  }
},
xAxis: {
  type: 'category',
  boundaryGap: false,
  data: date
},
yAxis: {
  type: 'value',
  boundaryGap: [0, '100%']
},
dataZoom: [
  {
    type: 'inside',
    start: 0,
    end: 10
  },
  {
    start: 0,
    end: 10
  }
],
series: [
  {
    name: 'Fake Data',
    type: 'line',
    symbol: 'none',
    sampling: 'lttb',
    itemStyle: {
      color: 'rgb(255, 70, 131)'
    },
    areaStyle: {
      color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
        {
          offset: 0,
          color: 'rgb(255, 158, 68)'
        },
        {
          offset: 1,
          color: 'rgb(255, 70, 131)'
        }
      ])
    },
    data: data
  }
]
};

  if (option && typeof option === 'object') {
    myChart.setOption(option);
  }

  window.addEventListener('resize', myChart.resize);
</script>

<!----------------------------------------- Grafik4 --------------------------->
<h1 style="margin-left:50% ;">Grafik4</h1>
<div  id="container3" style="height: 400px"></div>

  
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js"></script>
<!-- Uncomment this line if you want to dataTool extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/extension/dataTool.min.js"></script>
-->
<!-- Uncomment this line if you want to use gl extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js"></script>
-->
<!-- Uncomment this line if you want to echarts-stat extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js"></script>
-->
<!-- Uncomment this line if you want to use map
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/china.js"></script>
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/world.js"></script>
-->
<!-- Uncomment these two lines if you want to use bmap extension
<script type="text/javascript" src="https://api.map.baidu.com/api?v=3.0&ak=YOUR_API_KEY"></script>
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.1/dist/extension/bmap.min.js"></script>
-->

<script type="text/javascript">
  var dom = document.getElementById('container3');
  var myChart = echarts.init(dom, null, {
    renderer: 'canvas',
    useDirtyRect: false
  });
  var app = {};
  
  var option;

  const colors = ['#5470C6', '#EE6666'];
option = {
color: colors,
tooltip: {
  trigger: 'none',
  axisPointer: {
    type: 'cross'
  }
},
legend: {},
grid: {
  top: 70,
  bottom: 50
},
xAxis: [
  {
    type: 'category',
    axisTick: {
      alignWithLabel: true
    },
    axisLine: {
      onZero: false,
      lineStyle: {
        color: colors[1]
      }
    },
    axisPointer: {
      label: {
        formatter: function (params) {
          return (
            'Precipitation  ' +
            params.value +
            (params.seriesData.length ? '：' + params.seriesData[0].data : '')
          );
        }
      }
    },
    // prettier-ignore
    data: ['2016-1', '2016-2', '2016-3', '2016-4', '2016-5', '2016-6', '2016-7', '2016-8', '2016-9', '2016-10', '2016-11', '2016-12']
  },
  {
    type: 'category',
    axisTick: {
      alignWithLabel: true
    },
    axisLine: {
      onZero: false,
      lineStyle: {
        color: colors[0]
      }
    },
    axisPointer: {
      label: {
        formatter: function (params) {
          return (
            'Precipitation  ' +
            params.value +
            (params.seriesData.length ? '：' + params.seriesData[0].data : '')
          );
        }
      }
    },
    // prettier-ignore
    data: ['2015-1', '2015-2', '2015-3', '2015-4', '2015-5', '2015-6', '2015-7', '2015-8', '2015-9', '2015-10', '2015-11', '2015-12']
  }
],
yAxis: [
  {
    type: 'value'
  }
],
series: [
  {
    name: 'Precipitation(2015)',
    type: 'line',
    xAxisIndex: 1,
    smooth: true,
    emphasis: {
      focus: 'series'
    },
    data: [
      2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3
    ]
  },
  {
    name: 'Precipitation(2016)',
    type: 'line',
    smooth: true,
    emphasis: {
      focus: 'series'
    },
    data: [
      3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7
    ]
  }
]
};

  if (option && typeof option === 'object') {
    myChart.setOption(option);
  }

  window.addEventListener('resize', myChart.resize);
</script>
</div>

</Layout>


<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;

	}
	h1 {
		font-size: 1rem;
		font-weight: 800;
		margin: 0;
    
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
    
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
  
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>

